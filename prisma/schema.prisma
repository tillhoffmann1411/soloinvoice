generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Position {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String   @db.VarChar(255)
  quantity    Int      @default(1)
  price       Float
  tax         Float
  total       Float
  invoice     Invoice  @relation(fields: [invoiceId], references: [id])
  invoiceId   Int
}

model Invoice {
  id        Int        @id @default(autoincrement())
  title     String?
  invoiceNo String
  date      DateTime
  dueDate   DateTime
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  contact   Contact    @relation(fields: [contactId], references: [id])
  contactId Int
  positions Position[]
}

model Contact {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String?
  phone     String?
  street    String?
  city      String?
  country   String?
  zipcode   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  invoices  Invoice[]
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  invoices  Invoice[]
  contacts  Contact[]
}
